package ui

import (
	"fyne.io/fyne/v2"
	"fyne.io/fyne/v2/canvas"
	"fyne.io/fyne/v2/container"
	"fyne.io/fyne/v2/layout"
	"fyne.io/fyne/v2/theme"
	"fyne.io/fyne/v2/widget"
)

func (mp *ControlPage) createHomeScreen(
	onTestRun func(),
	onScenarios func(),
	onHistory func(),
) fyne.CanvasObject {
	var logoImg *canvas.Image
	if logo, err := fyne.LoadResourceFromPath("assets/logo.png"); err == nil {
		logoImg = canvas.NewImageFromResource(logo)
	} else {
		logoImg = canvas.NewImageFromResource(theme.FyneLogo())
	}
	logoImg.FillMode = canvas.ImageFillContain
	logoImg.SetMinSize(fyne.NewSize(300, 200))

	title := canvas.NewText("HTTES: –ú–æ–¥—É–ª—å –Ω–∞–≥—Ä—É–∑–æ—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è", theme.PrimaryColor())
	title.TextStyle = fyne.TextStyle{Bold: true}
	title.TextSize = 24
	title.Alignment = fyne.TextAlignCenter

	separator := widget.NewSeparator()

	description := widget.NewLabel(
		"–ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤–µ–±-—Å–µ—Ä–≤–∏—Å–æ–≤ –∏ API.\n\n" +
			"‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã–º–∏ —Å—Ü–µ–Ω–∞—Ä–∏—è–º–∏\n" +
			"‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π –Ω–∞–≥—Ä—É–∑–∫–∏\n" +
			"‚Ä¢ –î–µ—Ç–∞–ª—å–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –∞–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤\n" +
			"‚Ä¢ –ò—Å—Ç–æ—Ä–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤")
	description.Wrapping = fyne.TextWrapWord
	description.Alignment = fyne.TextAlignCenter

	testRunBtn := widget.NewButtonWithIcon("–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞", theme.MediaPlayIcon(), onTestRun)
	scenariosBtn := widget.NewButtonWithIcon("–°—Ü–µ–Ω–∞—Ä–∏–∏", theme.DocumentCreateIcon(), onScenarios)
	historyBtn := widget.NewButtonWithIcon("–ò—Å—Ç–æ—Ä–∏—è", theme.HistoryIcon(), onHistory)

	testRunBtn.Importance = widget.HighImportance
	scenariosBtn.Importance = widget.HighImportance
	historyBtn.Importance = widget.HighImportance

	// –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –≤–µ—Ä—Ö–Ω–µ–π –ø–∞–Ω–µ–ª–∏
	profileIcon := widget.NewIcon(theme.AccountIcon())
	usernameLabel := widget.NewLabel(mp.username)
	logoutButton := widget.NewButtonWithIcon("–í—ã–π—Ç–∏", theme.LogoutIcon(), func() {
		// –û–±–Ω—É–ª—è–µ–º –≥—Ä–∞—Ñ–∏–∫–∏ –ø–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º
		mp.ResetCharts()
		mp.username = ""
		mp.role = ""
		mp.window.SetContent(CreateLoginScreen(mp))
	})

	// –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –≤–µ—Ä—Ö–Ω–µ–π –ø–∞–Ω–µ–ª–∏ (–∏–∫–æ–Ω–∫–∞, –∏–º—è, –∫–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞)
	topBar := container.NewHBox(
		layout.NewSpacer(),
		profileIcon,
		usernameLabel,
		logoutButton,
	)

	// –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã
	var themeButton *widget.Button
	themeButton = widget.NewButton("‚òÄÔ∏è –°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞", func() {
		if mp.isDarkMode {
			fyne.CurrentApp().Settings().SetTheme(theme.LightTheme())
			themeButton.SetText("üåô –¢–µ–º–Ω–∞—è —Ç–µ–º–∞")
		} else {
			fyne.CurrentApp().Settings().SetTheme(theme.DarkTheme())
			themeButton.SetText("‚òÄÔ∏è –°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞")
		}
		mp.isDarkMode = !mp.isDarkMode
	})
	themeButton.Importance = widget.LowImportance

	content := container.NewVBox(
		container.NewPadded(logoImg),
		container.NewCenter(title),
		container.NewVBox(layout.NewSpacer(), separator, layout.NewSpacer()),
		container.NewPadded(description),
		container.NewVBox(layout.NewSpacer(), widget.NewLabel(" ")),
		container.NewGridWithColumns(3,
			container.NewPadded(testRunBtn),
			container.NewPadded(scenariosBtn),
			container.NewPadded(historyBtn),
		),
		container.NewVBox(layout.NewSpacer(), widget.NewLabel(" ")),
		container.NewCenter(themeButton),
	)

	// –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –≤–µ—Ä—Ö–Ω–µ–π –ø–∞–Ω–µ–ª—å—é –∏ –æ—Å–Ω–æ–≤–Ω—ã–º —Å–æ–¥–µ—Ä–∂–∏–º—ã–º
	return container.NewBorder(
		topBar, // –í–µ—Ä—Ö–Ω—è—è –ø–∞–Ω–µ–ª—å
		nil,    // –ù–∏–∂–Ω—è—è –ø–∞–Ω–µ–ª—å (–Ω–µ—Ç)
		nil,    // –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å (–Ω–µ—Ç)
		nil,    // –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å (–Ω–µ—Ç)
		container.NewPadded(
			container.NewVBox(
				container.NewCenter(content),
				layout.NewSpacer(),
			),
		),
	)
}
